import { RequestState } from '@clerk/backend/internal';
import { AdditionalStateOptions } from '../types.js';
import '@clerk/backend';
import '@clerk/types';

/**
 * Wraps obscured clerk internals with a readable `clerkState` key.
 * This is intended to be passed into <ClerkProvider>
 *
 * @internal
 */
declare const wrapWithClerkState: (data: any) => {
    __internal_clerk_state: any;
};
/**
 * Returns the clerk state object and observability headers to be injected into a context.
 *
 * @internal
 */
declare function getResponseClerkState(requestState: RequestState, additionalStateOptions?: AdditionalStateOptions): {
    clerkInitialState: {
        __internal_clerk_state: any;
    };
    headers: Headers;
};
/**
 * Patches request to avoid duplex issues with unidici
 * For more information, see:
 * https://github.com/nodejs/node/issues/46221
 * https://github.com/whatwg/fetch/pull/1457
 * @internal
 */
declare const patchRequest: (request: Request) => Request;

export { getResponseClerkState, patchRequest, wrapWithClerkState };
