{"version":3,"sources":["../../../src/server/utils/index.ts"],"names":[],"mappings":";;;;;;AAca,IAAA,kBAAA,GAAqB,CAAC,IAAc,KAAA;AAC/C,EAAA,OAAO,EAAE,sBAAA,EAAwB,EAAE,GAAG,MAAO,EAAA;AAC/C;AAOO,SAAS,qBAAsB,CAAA,YAAA,EAA4B,sBAAiD,GAAA,EAAI,EAAA;AACrH,EAAA,MAAM,EAAE,MAAQ,EAAA,OAAA,EAAS,UAAY,EAAA,GAAG,MAAS,GAAA,YAAA;AACjD,EAAA,MAAM,QAAQ,QAAS,EAAA;AAEvB,EAAA,MAAM,oBAAoB,kBAAmB,CAAA;AAAA,IAC3C,iBAAA,EAAmB,KAAK,MAAO,EAAA;AAAA,IAC/B,kBAAkB,YAAa,CAAA,cAAA;AAAA,IAC/B,YAAY,YAAa,CAAA,QAAA;AAAA,IACzB,UAAU,YAAa,CAAA,MAAA;AAAA,IACvB,eAAe,YAAa,CAAA,WAAA;AAAA,IAC5B,aAAa,YAAa,CAAA,SAAA;AAAA,IAC1B,aAAa,YAAa,CAAA,SAAA;AAAA,IAC1B,kBAAkB,YAAa,CAAA,cAAA;AAAA,IAC/B,kBAAkB,YAAa,CAAA,cAAA;AAAA,IAC/B,aAAA,EAAe,kBAAkB,YAAY,CAAA;AAAA,IAC7C,YAAc,EAAA,cAAA,CAAe,UAAY,EAAA,KAAA,CAAM,OAAO,CAAA;AAAA,IACtD,gBAAkB,EAAA,cAAA,CAAe,kBAAoB,EAAA,KAAA,CAAM,OAAO,CAAA;AAAA,IAClE,qBAAqB,QAAS,CAAA,cAAA,CAAe,0BAA4B,EAAA,KAAA,CAAM,OAAO,CAAC,CAAA;AAAA,IACvF,kBAAkB,QAAS,CAAA,cAAA,CAAe,uBAAyB,EAAA,KAAA,CAAM,OAAO,CAAC,CAAA;AAAA,IACjF,0BACE,sBAAuB,CAAA,sBAAA,IACvB,eAAe,kCAAoC,EAAA,KAAA,CAAM,OAAO,CAChE,IAAA,EAAA;AAAA,IACF,0BACE,sBAAuB,CAAA,sBAAA,IACvB,eAAe,kCAAoC,EAAA,KAAA,CAAM,OAAO,CAChE,IAAA,EAAA;AAAA,IACF,6BACE,sBAAuB,CAAA,yBAAA,IACvB,eAAe,qCAAuC,EAAA,KAAA,CAAM,OAAO,CACnE,IAAA,EAAA;AAAA,IACF,6BACE,sBAAuB,CAAA,yBAAA,IACvB,eAAe,qCAAuC,EAAA,KAAA,CAAM,OAAO,CACnE,IAAA;AAAA,GACH,CAAA;AAED,EAAO,OAAA;AAAA,IACL,iBAAA;AAAA,IACA,SAAS,YAAa,CAAA;AAAA,GACxB;AACF;AASa,IAAA,YAAA,GAAe,CAAC,OAAqB,KAAA;AAChD,EAAA,MAAM,aAAgB,GAAA,IAAI,OAAQ,CAAA,OAAA,CAAQ,GAAK,EAAA;AAAA,IAC7C,SAAS,OAAQ,CAAA,OAAA;AAAA,IACjB,QAAQ,OAAQ,CAAA,MAAA;AAAA,IAChB,UAAU,OAAQ,CAAA,QAAA;AAAA,IAClB,OAAO,OAAQ,CAAA,KAAA;AAAA,IACf,QAAQ,OAAQ,CAAA;AAAA,GACjB,CAAA;AAGD,EAAI,IAAA,aAAA,CAAc,WAAW,KAAS,IAAA,aAAA,CAAc,SAAS,IAAQ,IAAA,EAAE,YAAY,aAAgB,CAAA,EAAA;AACjG,IAAC,cAAgD,MAAS,GAAA,MAAA;AAAA;AAG5D,EAAO,OAAA,aAAA;AACT","file":"index.js","sourcesContent":["import type { RequestState } from '@clerk/backend/internal';\nimport { debugRequestState } from '@clerk/backend/internal';\nimport { getEnvVariable } from '@clerk/shared/getEnvVariable';\nimport { isTruthy } from '@clerk/shared/underscore';\nimport { getEvent } from 'vinxi/http';\n\nimport type { AdditionalStateOptions } from '../types';\n\n/**\n * Wraps obscured clerk internals with a readable `clerkState` key.\n * This is intended to be passed into <ClerkProvider>\n *\n * @internal\n */\nexport const wrapWithClerkState = (data: any) => {\n  return { __internal_clerk_state: { ...data } };\n};\n\n/**\n * Returns the clerk state object and observability headers to be injected into a context.\n *\n * @internal\n */\nexport function getResponseClerkState(requestState: RequestState, additionalStateOptions: AdditionalStateOptions = {}) {\n  const { reason, message, isSignedIn, ...rest } = requestState;\n  const event = getEvent();\n\n  const clerkInitialState = wrapWithClerkState({\n    __clerk_ssr_state: rest.toAuth(),\n    __publishableKey: requestState.publishableKey,\n    __proxyUrl: requestState.proxyUrl,\n    __domain: requestState.domain,\n    __isSatellite: requestState.isSatellite,\n    __signInUrl: requestState.signInUrl,\n    __signUpUrl: requestState.signUpUrl,\n    __afterSignInUrl: requestState.afterSignInUrl,\n    __afterSignUpUrl: requestState.afterSignUpUrl,\n    __clerk_debug: debugRequestState(requestState),\n    __clerkJSUrl: getEnvVariable('CLERK_JS', event.context),\n    __clerkJSVersion: getEnvVariable('CLERK_JS_VERSION', event.context),\n    __telemetryDisabled: isTruthy(getEnvVariable('CLERK_TELEMETRY_DISABLED', event.context)),\n    __telemetryDebug: isTruthy(getEnvVariable('CLERK_TELEMETRY_DEBUG', event.context)),\n    __signInForceRedirectUrl:\n      additionalStateOptions.signInForceRedirectUrl ||\n      getEnvVariable('CLERK_SIGN_IN_FORCE_REDIRECT_URL', event.context) ||\n      '',\n    __signUpForceRedirectUrl:\n      additionalStateOptions.signUpForceRedirectUrl ||\n      getEnvVariable('CLERK_SIGN_UP_FORCE_REDIRECT_URL', event.context) ||\n      '',\n    __signInFallbackRedirectUrl:\n      additionalStateOptions.signInFallbackRedirectUrl ||\n      getEnvVariable('CLERK_SIGN_IN_FALLBACK_REDIRECT_URL', event.context) ||\n      '',\n    __signUpFallbackRedirectUrl:\n      additionalStateOptions.signUpFallbackRedirectUrl ||\n      getEnvVariable('CLERK_SIGN_UP_FALLBACK_REDIRECT_URL', event.context) ||\n      '',\n  });\n\n  return {\n    clerkInitialState,\n    headers: requestState.headers,\n  };\n}\n\n/**\n * Patches request to avoid duplex issues with unidici\n * For more information, see:\n * https://github.com/nodejs/node/issues/46221\n * https://github.com/whatwg/fetch/pull/1457\n * @internal\n */\nexport const patchRequest = (request: Request) => {\n  const clonedRequest = new Request(request.url, {\n    headers: request.headers,\n    method: request.method,\n    redirect: request.redirect,\n    cache: request.cache,\n    signal: request.signal,\n  });\n\n  // If duplex is not set, set it to 'half' to avoid duplex issues with unidici\n  if (clonedRequest.method !== 'GET' && clonedRequest.body !== null && !('duplex' in clonedRequest)) {\n    (clonedRequest as unknown as { duplex: 'half' }).duplex = 'half';\n  }\n\n  return clonedRequest;\n};\n"]}