import { LoaderOptions } from './types.js';
import '@clerk/backend';
import '@clerk/types';

declare const loadOptions: (request: Request, overrides?: LoaderOptions) => {
    secretKey: string;
    publishableKey: string;
    jwtKey: string;
    apiUrl: string;
    domain: string;
    isSatellite: boolean;
    proxyUrl: string;
    signInUrl: string;
    signUpUrl: string;
    afterSignInUrl: string;
    afterSignUpUrl: string;
    audience?: string | string[] | undefined;
    authorizedParties?: string[] | undefined;
    signInForceRedirectUrl?: string | null;
    signInFallbackRedirectUrl?: string | null;
    signUpForceRedirectUrl?: string | null;
    signUpFallbackRedirectUrl?: string | null;
    redirectUrl?: string | null;
} | {
    secretKey: string;
    publishableKey: string;
    jwtKey: string;
    apiUrl: string;
    domain: string;
    isSatellite: boolean;
    proxyUrl: string;
    signInUrl: string;
    signUpUrl: string;
    afterSignInUrl: string;
    afterSignUpUrl: string;
    audience?: string | string[] | undefined;
    authorizedParties?: string[] | undefined;
    signInForceRedirectUrl?: string | null;
    signInFallbackRedirectUrl?: string | null;
    signUpForceRedirectUrl?: string | null;
    signUpFallbackRedirectUrl?: string | null;
    redirectUrl?: string | null;
} | {
    secretKey: string;
    publishableKey: string;
    jwtKey: string;
    apiUrl: string;
    domain: string;
    isSatellite: boolean;
    proxyUrl: string;
    signInUrl: string;
    signUpUrl: string;
    afterSignInUrl: string;
    afterSignUpUrl: string;
    audience?: string | string[] | undefined;
    authorizedParties?: string[] | undefined;
    signInForceRedirectUrl?: string | null;
    signInFallbackRedirectUrl?: string | null;
    signUpForceRedirectUrl?: string | null;
    signUpFallbackRedirectUrl?: string | null;
    redirectUrl?: string | null;
};

export { loadOptions };
