import { UserProfile as UserProfile$1, OrganizationProfile as OrganizationProfile$1, OrganizationList as OrganizationList$1, SignIn as SignIn$1, SignUp as SignUp$1 } from '@clerk/clerk-react';
import { useRoutingProps } from '@clerk/clerk-react/internal';
import { useParams, useLocation } from '@tanstack/react-router';
import { jsx } from 'react/jsx-runtime';

// src/client/uiComponents.tsx
var usePathnameWithoutSplatRouteParams = () => {
  const { _splat } = useParams({
    strict: false
  });
  const { pathname } = useLocation();
  const splatRouteParam = _splat || "";
  const path = pathname.replace(splatRouteParam, "").replace(/\/$/, "").replace(/^\//, "").trim();
  return `/${path}`;
};
var UserProfile = Object.assign(
  (props) => {
    const path = usePathnameWithoutSplatRouteParams();
    return /* @__PURE__ */ jsx(UserProfile$1, { ...useRoutingProps("UserProfile", props, { path }) });
  },
  { ...UserProfile$1 }
);
var OrganizationProfile = Object.assign(
  (props) => {
    const path = usePathnameWithoutSplatRouteParams();
    return /* @__PURE__ */ jsx(OrganizationProfile$1, { ...useRoutingProps("OrganizationProfile", props, { path }) });
  },
  { ...OrganizationProfile$1 }
);
var OrganizationList = Object.assign(
  (props) => {
    const path = usePathnameWithoutSplatRouteParams();
    return /* @__PURE__ */ jsx(OrganizationList$1, { ...useRoutingProps("OrganizationList", props, { path }) });
  },
  { ...OrganizationList$1 }
);
var SignIn = (props) => {
  const path = usePathnameWithoutSplatRouteParams();
  return /* @__PURE__ */ jsx(SignIn$1, { ...useRoutingProps("SignIn", props, { path }) });
};
var SignUp = (props) => {
  const path = usePathnameWithoutSplatRouteParams();
  return /* @__PURE__ */ jsx(SignUp$1, { ...useRoutingProps("SignUp", props, { path }) });
};

export { OrganizationList, OrganizationProfile, SignIn, SignUp, UserProfile };
//# sourceMappingURL=uiComponents.js.map
//# sourceMappingURL=uiComponents.js.map