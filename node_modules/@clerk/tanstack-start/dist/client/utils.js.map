{"version":3,"sources":["../../src/client/utils.ts"],"names":[],"mappings":";;;AAKa,IAAA,sBAAA,GAAyB,CACpC,cAGG,KAAA;AACH,EAAM,MAAA;AAAA,IACJ,iBAAA;AAAA,IACA,gBAAA;AAAA,IACA,UAAA;AAAA,IACA,QAAA;AAAA,IACA,aAAA;AAAA,IACA,WAAA;AAAA,IACA,WAAA;AAAA,IACA,gBAAA;AAAA,IACA,gBAAA;AAAA,IACA,YAAA;AAAA,IACA,gBAAA;AAAA,IACA,mBAAA;AAAA,IACA,gBAAA;AAAA,IACA,wBAAA;AAAA,IACA,wBAAA;AAAA,IACA,2BAAA;AAAA,IACA;AAAA,GACF,GAAI,kBAAkB,EAAC;AAEvB,EAAO,OAAA;AAAA,IACL,aAAe,EAAA,iBAAA;AAAA,IACf,cAAgB,EAAA,gBAAA;AAAA,IAChB,QAAU,EAAA,UAAA;AAAA,IACV,MAAQ,EAAA,QAAA;AAAA,IACR,WAAA,EAAa,CAAC,CAAC,aAAA;AAAA,IACf,SAAW,EAAA,WAAA;AAAA,IACX,SAAW,EAAA,WAAA;AAAA,IACX,cAAgB,EAAA,gBAAA;AAAA,IAChB,cAAgB,EAAA,gBAAA;AAAA,IAChB,UAAY,EAAA,YAAA;AAAA,IACZ,cAAgB,EAAA,gBAAA;AAAA,IAChB,SAAW,EAAA;AAAA,MACT,QAAU,EAAA,mBAAA;AAAA,MACV,KAAO,EAAA;AAAA,KACT;AAAA,IACA,sBAAwB,EAAA,wBAAA;AAAA,IACxB,sBAAwB,EAAA,wBAAA;AAAA,IACxB,yBAA2B,EAAA,2BAAA;AAAA,IAC3B,yBAA2B,EAAA;AAAA,GAC7B;AACF;AAEa,IAAA,mBAAA,GAAsB,CAAC,aAAuB,KAAA;AACzD,EAAO,OAAA;AAAA,IACL,GAAG,aAAA;AAAA,IACH,cAAgB,EAAA,aAAA,CAAc,cAAkB,IAAA,qBAAA,EAAwB,CAAA,cAAA;AAAA,IACxE,MAAQ,EAAA,aAAA,CAAc,MAAU,IAAA,qBAAA,EAAwB,CAAA,MAAA;AAAA,IACxD,WAAa,EAAA,aAAA,CAAc,WAAe,IAAA,qBAAA,EAAwB,CAAA,WAAA;AAAA,IAClE,SAAW,EAAA,aAAA,CAAc,SAAa,IAAA,qBAAA,EAAwB,CAAA,SAAA;AAAA,IAC9D,SAAW,EAAA,aAAA,CAAc,SAAa,IAAA,qBAAA,EAAwB,CAAA,SAAA;AAAA,IAC9D,cAAgB,EAAA,aAAA,CAAc,cAAkB,IAAA,qBAAA,EAAwB,CAAA,cAAA;AAAA,IACxE,cAAgB,EAAA,aAAA,CAAc,cAAkB,IAAA,qBAAA,EAAwB,CAAA,cAAA;AAAA,IACxE,UAAY,EAAA,aAAA,CAAc,UAAc,IAAA,qBAAA,EAAwB,CAAA,UAAA;AAAA,IAChE,cAAgB,EAAA,aAAA,CAAc,cAAkB,IAAA,qBAAA,EAAwB,CAAA,cAAA;AAAA,IACxE,wBAAwB,aAAc,CAAA,sBAAA;AAAA,IACtC,cAAgB,EAAA,aAAA,CAAc,cAAkB,IAAA,qBAAA,EAAwB,CAAA;AAAA,GAC1E;AACF","file":"utils.js","sourcesContent":["import { getPublicEnvVariables } from '../utils/env';\nimport type { TanstackStartClerkProviderProps } from './types';\n\ntype TanStackProviderAndInitialProps = Omit<TanstackStartClerkProviderProps, 'children'>;\n\nexport const pickFromClerkInitState = (\n  clerkInitState: any,\n): TanStackProviderAndInitialProps & {\n  clerkSsrState: any;\n} => {\n  const {\n    __clerk_ssr_state,\n    __publishableKey,\n    __proxyUrl,\n    __domain,\n    __isSatellite,\n    __signInUrl,\n    __signUpUrl,\n    __afterSignInUrl,\n    __afterSignUpUrl,\n    __clerkJSUrl,\n    __clerkJSVersion,\n    __telemetryDisabled,\n    __telemetryDebug,\n    __signInForceRedirectUrl,\n    __signUpForceRedirectUrl,\n    __signInFallbackRedirectUrl,\n    __signUpFallbackRedirectUrl,\n  } = clerkInitState || {};\n\n  return {\n    clerkSsrState: __clerk_ssr_state,\n    publishableKey: __publishableKey,\n    proxyUrl: __proxyUrl,\n    domain: __domain,\n    isSatellite: !!__isSatellite,\n    signInUrl: __signInUrl,\n    signUpUrl: __signUpUrl,\n    afterSignInUrl: __afterSignInUrl,\n    afterSignUpUrl: __afterSignUpUrl,\n    clerkJSUrl: __clerkJSUrl,\n    clerkJSVersion: __clerkJSVersion,\n    telemetry: {\n      disabled: __telemetryDisabled,\n      debug: __telemetryDebug,\n    },\n    signInForceRedirectUrl: __signInForceRedirectUrl,\n    signUpForceRedirectUrl: __signUpForceRedirectUrl,\n    signInFallbackRedirectUrl: __signInFallbackRedirectUrl,\n    signUpFallbackRedirectUrl: __signUpFallbackRedirectUrl,\n  };\n};\n\nexport const mergeWithPublicEnvs = (restInitState: any) => {\n  return {\n    ...restInitState,\n    publishableKey: restInitState.publishableKey || getPublicEnvVariables().publishableKey,\n    domain: restInitState.domain || getPublicEnvVariables().domain,\n    isSatellite: restInitState.isSatellite || getPublicEnvVariables().isSatellite,\n    signInUrl: restInitState.signInUrl || getPublicEnvVariables().signInUrl,\n    signUpUrl: restInitState.signUpUrl || getPublicEnvVariables().signUpUrl,\n    afterSignInUrl: restInitState.afterSignInUrl || getPublicEnvVariables().afterSignInUrl,\n    afterSignUpUrl: restInitState.afterSignUpUrl || getPublicEnvVariables().afterSignUpUrl,\n    clerkJSUrl: restInitState.clerkJSUrl || getPublicEnvVariables().clerkJsUrl,\n    clerkJSVersion: restInitState.clerkJSVersion || getPublicEnvVariables().clerkJsVersion,\n    signInForceRedirectUrl: restInitState.signInForceRedirectUrl,\n    clerkJSVariant: restInitState.clerkJSVariant || getPublicEnvVariables().clerkJsVariant,\n  };\n};\n"]}