{"version":3,"sources":["../../src/client/OptionsContext.tsx"],"names":[],"mappings":";;;;AAMA,IAAM,eAAA,GAAkB,KAAM,CAAA,aAAA,CAAwD,MAAS,CAAA;AAC/F,eAAA,CAAgB,WAAc,GAAA,iBAAA;AAE9B,IAAM,kBAAkB,MAAyB;AAC/C,EAAM,MAAA,GAAA,GAAM,KAAM,CAAA,UAAA,CAAW,eAAe,CAAA;AAC5C,EAAA,OAAO,GAAI,CAAA,KAAA;AACb;AAEM,IAAA,oBAAA,GAAuB,CAAC,KAAmE,KAAA;AAC/F,EAAM,MAAA,EAAE,QAAU,EAAA,OAAA,EAAY,GAAA,KAAA;AAC9B,EAAO,uBAAA,GAAA,CAAC,gBAAgB,QAAhB,EAAA,EAAyB,OAAO,EAAE,KAAA,EAAO,OAAQ,EAAA,EAAI,QAAS,EAAA,CAAA;AACxE","file":"OptionsContext.js","sourcesContent":["import React from 'react';\n\nimport type { TanstackStartClerkProviderProps as ClerkProviderProps } from './types';\n\ntype ClerkContextValue = Partial<Omit<ClerkProviderProps, 'children'>>;\n\nconst ClerkOptionsCtx = React.createContext<{ value: ClerkContextValue } | undefined>(undefined);\nClerkOptionsCtx.displayName = 'ClerkOptionsCtx';\n\nconst useClerkOptions = (): ClerkContextValue => {\n  const ctx = React.useContext(ClerkOptionsCtx) as { value: ClerkContextValue };\n  return ctx.value;\n};\n\nconst ClerkOptionsProvider = (props: React.PropsWithChildren<{ options: ClerkContextValue }>) => {\n  const { children, options } = props;\n  return <ClerkOptionsCtx.Provider value={{ value: options }}>{children}</ClerkOptionsCtx.Provider>;\n};\n\nexport { ClerkOptionsProvider, useClerkOptions };\n"]}