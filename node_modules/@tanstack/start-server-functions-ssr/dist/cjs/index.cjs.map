{"version":3,"file":"index.cjs","sources":["../../src/index.ts"],"sourcesContent":["/// <reference types=\"node\" />\nimport { serverFnFetcher } from '@tanstack/start-server-functions-fetcher'\nimport { mergeHeaders } from '@tanstack/start-client-core'\nimport { getEvent, getHeaders } from '@tanstack/start-server-core'\nimport type { CreateRpcFn } from '@tanstack/server-functions-plugin'\n\nfunction sanitizeBase(base: string) {\n  return base.replace(/^\\/|\\/$/g, '')\n}\n\nexport const createSsrRpc: CreateRpcFn = (functionId, serverBase) => {\n  const url = `/${sanitizeBase(serverBase)}/${functionId}`\n\n  const ssrFn = (...args: Array<any>) => {\n    return serverFnFetcher(url, args, async (url, requestInit) => {\n      // pass on the headers from the document request to the server function fetch\n      requestInit.headers = mergeHeaders(getHeaders(), requestInit.headers)\n      // @ts-expect-error The $fetch.native method is not typed yet\n      const res: Response = await $fetch.native(url, requestInit)\n      const event = getEvent()\n      const mergedHeaders = mergeHeaders(\n        res.headers,\n        (event as any).___ssrRpcResponseHeaders,\n      )\n\n      // any response headers set in the server function need to be set on the document response\n      // we attach the headers to the event so we can later set them\n      ;(event as any).___ssrRpcResponseHeaders = mergedHeaders\n      return res\n    })\n  }\n\n  return Object.assign(ssrFn, {\n    url,\n    functionId,\n  })\n}\n"],"names":["serverFnFetcher","url","mergeHeaders","getHeaders","getEvent"],"mappings":";;;;;AAMA,SAAS,aAAa,MAAc;AAC3B,SAAA,KAAK,QAAQ,YAAY,EAAE;AACpC;AAEa,MAAA,eAA4B,CAAC,YAAY,eAAe;AACnE,QAAM,MAAM,IAAI,aAAa,UAAU,CAAC,IAAI,UAAU;AAEhD,QAAA,QAAQ,IAAI,SAAqB;AACrC,WAAOA,4BAAgB,gBAAA,KAAK,MAAM,OAAOC,MAAK,gBAAgB;AAE5D,kBAAY,UAAUC,gBAAA,aAAaC,gBAAW,WAAA,GAAG,YAAY,OAAO;AAEpE,YAAM,MAAgB,MAAM,OAAO,OAAOF,MAAK,WAAW;AAC1D,YAAM,QAAQG,gBAAAA,SAAS;AACvB,YAAM,gBAAgBF,gBAAA;AAAA,QACpB,IAAI;AAAA,QACH,MAAc;AAAA,MACjB;AAIE,YAAc,2BAA2B;AACpC,aAAA;AAAA,IAAA,CACR;AAAA,EACH;AAEO,SAAA,OAAO,OAAO,OAAO;AAAA,IAC1B;AAAA,IACA;AAAA,EAAA,CACD;AACH;;"}