import { ClientExtractedBaseEntry } from '@tanstack/start-client-core';
import { AnyRouteMatch, AnyRouter, DeferredPromise, Manifest } from '@tanstack/router-core';
export type ServerExtractedEntry = ServerExtractedStream | ServerExtractedPromise;
export interface ServerExtractedBaseEntry extends ClientExtractedBaseEntry {
    id: number;
    matchIndex: number;
}
export interface ServerExtractedStream extends ServerExtractedBaseEntry {
    type: 'stream';
    stream: ReadableStream;
}
export interface ServerExtractedPromise extends ServerExtractedBaseEntry {
    type: 'promise';
    promise: DeferredPromise<any>;
}
export declare function attachRouterServerSsrUtils(router: AnyRouter, manifest: Manifest | undefined): void;
export declare function dehydrateRouter(router: AnyRouter): void;
export declare function extractAsyncLoaderData(loaderData: any, ctx: {
    match: AnyRouteMatch;
    router: AnyRouter;
}): {
    replaced: any;
    extracted: ServerExtractedEntry[];
};
export declare function onMatchSettled(opts: {
    router: AnyRouter;
    match: AnyRouteMatch;
}): void;
export declare function replaceBy<T>(obj: T, cb: (value: any, path: Array<string>) => any, path?: Array<string>): T;
