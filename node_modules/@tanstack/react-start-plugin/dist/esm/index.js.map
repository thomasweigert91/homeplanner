{"version":3,"file":"index.js","sources":["../../src/index.ts"],"sourcesContent":["import { fileURLToPath, pathToFileURL } from 'node:url'\nimport path from 'node:path'\nimport { existsSync } from 'node:fs'\nimport { logDiff } from '@tanstack/router-utils'\nimport { compileStartOutput } from './compilers'\nimport type { Plugin } from 'vite'\n\nconst debug =\n  process.env.TSR_VITE_DEBUG &&\n  ['true', 'react-start-plugin'].includes(process.env.TSR_VITE_DEBUG)\n\nexport type TanStackStartViteOptions = {\n  globalMiddlewareEntry: string\n}\n\nconst transformFuncs = [\n  'createServerFn',\n  'createMiddleware',\n  'serverOnly',\n  'clientOnly',\n  'createIsomorphicFn',\n]\nconst tokenRegex = new RegExp(transformFuncs.join('|'))\n// const eitherFuncRegex = new RegExp(\n//   `(function ${transformFuncs.join('|function ')})`,\n// )\n\nexport function createTanStackStartPlugin(opts: TanStackStartViteOptions): {\n  client: Array<Plugin>\n  ssr: Array<Plugin>\n  server: Array<Plugin>\n} {\n  const globalMiddlewarePlugin = (): Plugin => {\n    let entry: string | null = null\n    let resolvedGlobalMiddlewareEntry: string | null = null\n    let globalMiddlewareEntryExists = false\n    let ROOT: string = process.cwd()\n    return {\n      name: 'vite-plugin-tanstack-start-ensure-global-middleware',\n      enforce: 'pre',\n      configResolved: (config) => {\n        ROOT = config.root\n        entry = path.resolve(ROOT, (config as any).router.handler)\n        resolvedGlobalMiddlewareEntry = path.resolve(\n          ROOT,\n          opts.globalMiddlewareEntry,\n        )\n        globalMiddlewareEntryExists = existsSync(resolvedGlobalMiddlewareEntry)\n\n        if (!entry) {\n          throw new Error(\n            '@tanstack/react-start-plugin: No server entry found!',\n          )\n        }\n      },\n      transform(code, id) {\n        if (entry && id.includes(entry)) {\n          if (globalMiddlewareEntryExists) {\n            return {\n              code: `${code}\\n\\nimport '${path.resolve(ROOT, opts.globalMiddlewareEntry)}'`,\n              map: null,\n            }\n          }\n        }\n        return null\n      },\n    }\n  }\n\n  return {\n    client: [\n      globalMiddlewarePlugin(),\n      TanStackStartServerFnsAndMiddleware({ ...opts, env: 'client' }),\n    ],\n    ssr: [\n      globalMiddlewarePlugin(),\n      TanStackStartServerFnsAndMiddleware({ ...opts, env: 'ssr' }),\n    ],\n    server: [\n      globalMiddlewarePlugin(),\n      TanStackStartServerFnsAndMiddleware({ ...opts, env: 'server' }),\n    ],\n  }\n}\n\nexport function TanStackStartServerFnsAndMiddleware(opts: {\n  env: 'server' | 'ssr' | 'client'\n}): Plugin {\n  let ROOT: string = process.cwd()\n\n  return {\n    name: 'vite-plugin-tanstack-start-create-server-fn',\n    enforce: 'pre',\n    configResolved: (config) => {\n      ROOT = config.root\n    },\n    transform(code, id) {\n      const url = pathToFileURL(id)\n      url.searchParams.delete('v')\n      id = fileURLToPath(url).replace(/\\\\/g, '/')\n\n      const includesToken = tokenRegex.test(code)\n      // const includesEitherFunc = eitherFuncRegex.test(code)\n\n      if (\n        !includesToken\n        // includesEitherFunc\n        // /node_modules/.test(id)\n      ) {\n        return null\n      }\n\n      if (code.includes('@react-refresh')) {\n        throw new Error(\n          `We detected that the '@vitejs/plugin-react' was passed before '@tanstack/react-start-plugin'. Please make sure that '@tanstack/router-vite-plugin' is passed before '@vitejs/plugin-react' and try again: \ne.g.\n\nplugins: [\n  TanStackStartVite(), // Place this before viteReact()\n  viteReact(),\n]\n`,\n        )\n      }\n\n      if (debug) console.info(`${opts.env} Compiling Start: `, id)\n\n      const compiled = compileStartOutput({\n        code,\n        root: ROOT,\n        filename: id,\n        env: opts.env,\n      })\n\n      if (debug) {\n        logDiff(code, compiled.code)\n        console.log('Output:\\n', compiled.code + '\\n\\n')\n      }\n\n      return compiled\n    },\n  }\n}\n"],"names":[],"mappings":";;;;;AAOA,MAAM,QACJ,QAAQ,IAAI,kBACZ,CAAC,QAAQ,oBAAoB,EAAE,SAAS,QAAQ,IAAI,cAAc;AAMpE,MAAM,iBAAiB;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACA,MAAM,aAAa,IAAI,OAAO,eAAe,KAAK,GAAG,CAAC;AAK/C,SAAS,0BAA0B,MAIxC;AACA,QAAM,yBAAyB,MAAc;AAC3C,QAAI,QAAuB;AAC3B,QAAI,gCAA+C;AACnD,QAAI,8BAA8B;AAC9B,QAAA,OAAe,QAAQ,IAAI;AACxB,WAAA;AAAA,MACL,MAAM;AAAA,MACN,SAAS;AAAA,MACT,gBAAgB,CAAC,WAAW;AAC1B,eAAO,OAAO;AACd,gBAAQ,KAAK,QAAQ,MAAO,OAAe,OAAO,OAAO;AACzD,wCAAgC,KAAK;AAAA,UACnC;AAAA,UACA,KAAK;AAAA,QACP;AACA,sCAA8B,WAAW,6BAA6B;AAEtE,YAAI,CAAC,OAAO;AACV,gBAAM,IAAI;AAAA,YACR;AAAA,UACF;AAAA,QAAA;AAAA,MAEJ;AAAA,MACA,UAAU,MAAM,IAAI;AAClB,YAAI,SAAS,GAAG,SAAS,KAAK,GAAG;AAC/B,cAAI,6BAA6B;AACxB,mBAAA;AAAA,cACL,MAAM,GAAG,IAAI;AAAA;AAAA,UAAe,KAAK,QAAQ,MAAM,KAAK,qBAAqB,CAAC;AAAA,cAC1E,KAAK;AAAA,YACP;AAAA,UAAA;AAAA,QACF;AAEK,eAAA;AAAA,MAAA;AAAA,IAEX;AAAA,EACF;AAEO,SAAA;AAAA,IACL,QAAQ;AAAA,MACN,uBAAuB;AAAA,MACvB,oCAAoC,EAAE,GAAG,MAAM,KAAK,SAAU,CAAA;AAAA,IAChE;AAAA,IACA,KAAK;AAAA,MACH,uBAAuB;AAAA,MACvB,oCAAoC,EAAE,GAAG,MAAM,KAAK,MAAO,CAAA;AAAA,IAC7D;AAAA,IACA,QAAQ;AAAA,MACN,uBAAuB;AAAA,MACvB,oCAAoC,EAAE,GAAG,MAAM,KAAK,SAAU,CAAA;AAAA,IAAA;AAAA,EAElE;AACF;AAEO,SAAS,oCAAoC,MAEzC;AACL,MAAA,OAAe,QAAQ,IAAI;AAExB,SAAA;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,IACT,gBAAgB,CAAC,WAAW;AAC1B,aAAO,OAAO;AAAA,IAChB;AAAA,IACA,UAAU,MAAM,IAAI;AACZ,YAAA,MAAM,cAAc,EAAE;AACxB,UAAA,aAAa,OAAO,GAAG;AAC3B,WAAK,cAAc,GAAG,EAAE,QAAQ,OAAO,GAAG;AAEpC,YAAA,gBAAgB,WAAW,KAAK,IAAI;AAG1C,UACE,CAAC,eAGD;AACO,eAAA;AAAA,MAAA;AAGL,UAAA,KAAK,SAAS,gBAAgB,GAAG;AACnC,cAAM,IAAI;AAAA,UACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQF;AAAA,MAAA;AAGF,UAAI,MAAe,SAAA,KAAK,GAAG,KAAK,GAAG,sBAAsB,EAAE;AAE3D,YAAM,WAAW,mBAAmB;AAAA,QAClC;AAAA,QACA,MAAM;AAAA,QACN,UAAU;AAAA,QACV,KAAK,KAAK;AAAA,MAAA,CACX;AAED,UAAI,OAAO;AACD,gBAAA,MAAM,SAAS,IAAI;AAC3B,gBAAQ,IAAI,aAAa,SAAS,OAAO,MAAM;AAAA,MAAA;AAG1C,aAAA;AAAA,IAAA;AAAA,EAEX;AACF;"}