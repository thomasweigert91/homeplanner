"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("react/jsx-runtime");
const ReactDOMServer = require("react-dom/server");
const startServerCore = require("@tanstack/start-server-core");
const StartServer = require("./StartServer.cjs");
const defaultRenderHandler = startServerCore.defineHandlerCallback(
  async ({ router, responseHeaders }) => {
    try {
      let html = ReactDOMServer.renderToString(/* @__PURE__ */ jsxRuntime.jsx(StartServer.StartServer, { router }));
      const injectedHtml = await Promise.all(
        router.serverSsr.injectedHtml
      ).then((htmls) => htmls.join(""));
      html = html.replace(`</body>`, `${injectedHtml}</body>`);
      return new Response(`<!DOCTYPE html>${html}`, {
        status: router.state.statusCode,
        headers: responseHeaders
      });
    } catch (error) {
      console.error("Render to string error:", error);
      return new Response("Internal Server Error", {
        status: 500,
        headers: responseHeaders
      });
    }
  }
);
exports.defaultRenderHandler = defaultRenderHandler;
//# sourceMappingURL=defaultRenderHandler.cjs.map
